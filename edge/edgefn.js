
var AWS = require('aws-sdk');
var route53 = new AWS.Route53();

var healthCheckId = '3e94509f-2b2d-4c97-975c-e73cd675ee57';

const status = function(data) {
    console.log(data); 
    let observations = data.HealthCheckObservations
    let ok =0;
    let failed = 0;
    for(let item of observations) {
        let statusReport = item.StatusReport;
        if (statusReport.Status.startsWith('Success')) {
            ok = ok + 1;
        } else {
            failed = failed + 1;
        }
    }
    
    if (ok <= failed && ok > 0) {
        return  Promise.resolve('failed');
    } else {
        return  Promise.resolve('ok');
    }
}

const response = {
    status: '200',
    statusDescription: 'OK',
    headers: {
        vary: [{
            key: 'Vary',
            value: '*',
        }],
        'last-modified': [{
            key: 'Last-Modified',
            value: '2017-01-13',
        }],
    },
    body: 'Example body generated by Lambda@Edge function.',
};

const badResponse = {
    status: '404',
    statusDescription: 'Bad Request',
    body: 'Nope - generated by Lambda@Edge function.',
};

exports.handler = (event, context, callback) => {

    var params = {
        HealthCheckId: healthCheckId /* required */
    };

    const errHandler = function(err) {
        console.log(err.message)
    }
    
    var primaryHealthStatus = route53.getHealthCheckStatus(params).promise();
    primaryHealthStatus.then(data => status(data))
    .then(statString => console.log(statString))
    .then(() => callback(null, response))
    .catch(error => errHandler(error));
 
    
};